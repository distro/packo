#! /usr/bin/env ruby
#--
# Copyleft meh. [http://meh.paranoid.pk | meh@paranoici.org]
#
# This file is part of packo.
#
# packo is free :software => you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# packo is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with packo. If not, see <http://www.gnu.org/licenses/>.
#++

require 'shellwords'

commands = Dir.glob('/usr/bin/packo-repository-*').map {|path|
  File.basename(path).sub('packo-repository-', '').split('-').map {|part|
    part.to_sym
  }
}

descriptions = {
  :remote => 'Manage remote repositories',
}

trusted = []

commands.each {|command|
  next unless command.map {|p| p.to_s} == ARGV[0 .. command.length - 1]

  ARGV.shift(command.length)

  sandbox  = false
  fakeroot = false

  ENV['PATH'].split(':').each {|folder|
    sandbox  ||= File.executable?("#{folder}/sandbox")
    fakeroot ||= File.executable?("#{folder}/fakeroot")
  }
  
  warn "sandbox isn't installed"  if !sandbox
  warn "fakeroot isn't installed" if !fakeroot

  through = []

  if !trusted.include?(command.length > 1 ? command : command.first)
    through << 'sandbox' if sandbox
  end 
  
  through << 'fakeroot' if fakeroot
  
  through << "packo-repository-#{command.join('-')}"

  exit Kernel.system(*(through + ARGV.map {|arg|
    arg.shellescape
  }))
}

require 'rubygems' unless defined?(Gem)

require 'packo/cli/repository'

commands.each {|command|
  next if command.length > 1

  command = command.shift

  Packo::CLI::Repository.class_eval %{
    desc '#{command} [ARGUMENTS...]', '#{descriptions[command]}'
    def #{command} (*arguments)
    end
  }
}

Packo::CLI::Repository.start(ARGV)
