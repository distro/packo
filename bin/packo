#! /usr/bin/env ruby
# encoding: utf-8
#--
# Copyleft meh. [http://meh.doesntexist.org | meh@paranoici.org]
#
# This file is part of packo.
#
# packo is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# packo is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with packo. If not, see <http://www.gnu.org/licenses/>.
#++

commands = Dir.glob('/usr/bin/packo-*').map {|path|
  File.basename(path).sub('packo-', '')
}

descriptions = {
  :base       => 'Manage packages in the system',
  :files      => 'Manage various informations about package contents',
  :build      => 'Manage packø building system',
  :select     => 'Manage various configurations',
  :repository => 'Manage packø repositories',
  :env        => 'Manage packø environment',
  :db         => 'Manage packø databases',
  :profile    => 'Manage packø profiles',
}

trusted = [:base, :select, :db, :profile]

if commands.member?(ARGV.first)
  command = ARGV.shift

  exit system(*([((!trusted.include?(command.to_sym)) ? 'sandbox' : nil), 'fakeroot', "packo-#{command}"] + ARGV).compact)
end

require 'rubygems' unless defined?(Gem)

require 'packo'
require 'packo/cli/base'

class Application < Packo::CLI::Base
  class_option :help, :type => :boolean, :desc => 'Show help usage'

  desc 'version', 'Show current version'
  map '-v' => :version, '--version' => :version
  def version
    puts "packø v. #{Packo.version}"
  end
end

commands.each {|command|
  Application.class_eval %{
    desc '#{command} [ARGUMENTS...]', '#{descriptions[command.to_sym] || '...'}'
    def #{command} (*arguments)
    end
  }
}

Application.start(ARGV)
